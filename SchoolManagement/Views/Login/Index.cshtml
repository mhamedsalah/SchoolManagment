@using SchoolManagement.Resources;
@using Kendo.Mvc.UI
@model SchoolManagement.Models.User
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/SMS/General.js" type="text/javascript"></script>

@*@using (Html.BeginForm("Login", "Login", FormMethod.Post))
{
    <div>
        @Html.Label(General.UserName)
        @Html.TextBoxFor(model => model.UserName, new { id = "username" })
    </div>
    <div>
        @Html.Label(General.Password)
        @Html.PasswordFor(model => model.Password, new { id = "password" })
    </div>
    <div>
        <input type="submit" value="@General.Login"/>
    </div>
}*@

<div class="demo-section k-content wide">
    @(Html.Kendo().ToolBar()
    .Name("ToolBar")
    .Items(items =>
    {
        items.Add().Type(CommandType.Button).Icon("funnel-clear").HtmlAttributes(new { id = "First" });
        items.Add().Type(CommandType.Button).Icon("funnel-clear").HtmlAttributes(new { id = "previous" });
        items.Add().Template("<input id='txtNumber' style='width: 100px;' />").Overflow(ShowInOverflowPopup.Never);
        items.Add().Type(CommandType.Button).Icon("funnel-clear").HtmlAttributes(new { id = "Next" });
        items.Add().Type(CommandType.Button).Icon("funnel-clear").HtmlAttributes(new { id = "Last" });
        //items.Add().Type(CommandType.SplitButton).Text("Insert").MenuButtons(menuButtons =>
        //{
        //    menuButtons.Add().Text("Insert above").Icon("insert-n");
        //    menuButtons.Add().Text("Insert between").Icon("insert-m");
        //    menuButtons.Add().Text("Insert below").Icon("insert-s");
        //});
        //items.Add().Type(CommandType.Separator);
        //items.Add().Template("<label>Format:</label>");
        //items.Add().Template("<input id='dropdown' style='width: 150px;' />").Overflow(ShowInOverflowPopup.Never);
        //items.Add().Type(CommandType.Separator);
        //items.Add().Type(CommandType.ButtonGroup).Buttons(buttons =>
        //{
        //    buttons.Add().Text("Left").Togglable(true).Group("text-align").SpriteCssClass("k-tool-icon k-justifyLeft");
        //    buttons.Add().Text("Center").Togglable(true).Group("text-align").SpriteCssClass("k-tool-icon k-justifyCenter");
        //    buttons.Add().Text("Right").Togglable(true).Group("text-align").SpriteCssClass("k-tool-icon k-justifyRight");
        //});
        //items.Add().Type(CommandType.ButtonGroup).Buttons(buttons =>
        //{
        //    buttons.Add().Text("Bold").Togglable(true).SpriteCssClass("k-tool-icon k-bold").ShowText(ShowIn.Overflow);
        //    buttons.Add().Text("Italic").Togglable(true).SpriteCssClass("k-tool-icon k-italic").ShowText(ShowIn.Overflow);
        //    buttons.Add().Text("Underline").Togglable(true).SpriteCssClass("k-tool-icon k-underline").ShowText(ShowIn.Overflow);
        //});
        //items.Add().Type(CommandType.Button).Text("Action").Overflow(ShowInOverflowPopup.Always);
        //items.Add().Type(CommandType.Button).Text("Another Action").Overflow(ShowInOverflowPopup.Always);
        //items.Add().Type(CommandType.Button).Text("Something else here").Overflow(ShowInOverflowPopup.Always);
    })
    )
</div>

<script>
    $(document).ready(function () {
        var IDCount = 0
        SelectIDs();
        $("#txtNumber").kendoNumericTextBox({
            //value: IDCount
        });
    });

    function SelectIDs() {
        $.ajax({
            url: "/Login/SelectIDs",
            type: "Get",
            data: { },
            success: function (data) {
                $("#txtNumber").value(data);
                //IDCount = data
                alter(2);
            }, error: function (ex) { alter(1);}
        });
    }
</script>